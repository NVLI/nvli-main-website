{"version":3,"sources":["components/zen-nvli/_allmixins.scss","components/zen-nvli/_layout.scss","components.css","init/_colors.scss","../node_modules/typey/stylesheets/typey/mixins/_spacing.scss","../node_modules/typey/stylesheets/typey/functions/_helpers.scss","components/zen-nvli/_category_listing.scss","../node_modules/chroma-sass/sass/chroma/_functions.scss","init/_variables.scss","components/zen-nvli/_header.scss","components/zen-nvli/_footer.scss","components/zen-nvli/_homepage.scss"],"names":[],"mappings":"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","file":"components.css","sourcesContent":["/* \n * THIS FILE CONTAINS ALL THE MIXINS USED FOR THIS THEME\n * @author Shruti \n */\n\n/* MIXIN FOR BOX SHADOW */\n\n@mixin box-shadow($top, $left, $blur, $color, $inset: false) {\n  @if $inset {\n    -webkit-box-shadow: inset $top $left $blur $color;\n    -moz-box-shadow: inset $top $left $blur $color;\n    box-shadow: inset $top $left $blur $color;\n  }\n\n  @else {\n    -webkit-box-shadow: $top $left $blur $color;\n    -moz-box-shadow: $top $left $blur $color;\n    box-shadow: $top $left $blur $color;\n  }\n}\n\n/* MIXIN FOR BOX SHADOW */\n\n/* BORDER RADIUS MIXIN */\n\n@mixin border-radius($radius) {\n  -webkit-border-radius: $radius;\n  -moz-border-radius: $radius;\n  -ms-border-radius: $radius;\n  border-radius: $radius;\n}\n\n/* BORDER RADIUS MIXIN */\n\n/* MIXIN FOR MULTILINE ELLIPSIS */\n\n@mixin ellipsis ($max-height, $lines: 2) {\n  // Fallback for non-webkit browsers.\n  // Fallback does not render ellipsis.\n  overflow: hidden;\n  max-height: $max-height;\n\n  // Webkit solution for multiline ellipsis\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: $lines;\n\n  // Solution for Opera\n  text-overflow: -o-ellipsis-lastline;\n}\n\n/* MIXIN FOR MULTILINE ELLIPSIS */\n\n/* MIXIN FOR PLACEHOLDER */\n\n@mixin placeholder {\n  ::-webkit-input-placeholder {@content}\n  :-moz-placeholder           {@content}\n  ::-moz-placeholder          {@content}\n  :-ms-input-placeholder      {@content}  \n}\n\n/* MIXIN FOR PLACEHOLDER */\n\n/* MIXIN FOR SEARCH BLOCK */\n\n@mixin search-block {\n  label {\n    display: none;\n  }\n  \n  input {\n    @include border-radius(4px);\n    padding: 0 20px;\n    border: 1px solid color(grey-light);\n    line-height: 40px;\n    float: left;\n\n    &.form-text {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n      @include placeholder {\n        color: color('red');\n      }\n    }\n  }\n\n  input[type='submit'] {\n    color: color(blue);\n    background: color(white);\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .form-item {\n    float: left;\n    max-width: 250px;\n    margin: 0;\n  }\n}\n\n/* MIXIN SEARCH BLOCK */\n","/* \n * THIS FILE CONTAINS ALL THE LAYOUT RELATED STYLE CHANGES\n * @author Shruti \n */\n\n\n.layout-center {\n  @media (min-width: 768px) {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n.layout-3col {\n  margin: 0 0 330px;\n  z-index: 1;\n  background: color(white);\n  @media (max-width: 767px) {\n    margin: 0;\n  }\n}\n\n.layout-3col__right-sidebar {\n  @media (min-width: 999px) {\n    @include margin-top(1, xxl);\n  }\n}\n\nbody:not(.front) .layout-3col {\n  padding: 0 112px;\n}\n","/* \n * THIS FILE CONTAINS ALL THE MIXINS USED FOR THIS THEME\n * @author Shruti \n */\n/* MIXIN FOR BOX SHADOW */\n/* MIXIN FOR BOX SHADOW */\n/* BORDER RADIUS MIXIN */\n/* BORDER RADIUS MIXIN */\n/* MIXIN FOR MULTILINE ELLIPSIS */\n/* MIXIN FOR MULTILINE ELLIPSIS */\n/* MIXIN FOR PLACEHOLDER */\n/* MIXIN FOR PLACEHOLDER */\n/* MIXIN FOR SEARCH BLOCK */\n/* MIXIN SEARCH BLOCK */\n/* \n * THIS FILE CONTAINS ALL THE LAYOUT RELATED STYLE CHANGES\n * @author Shruti \n */\n@media (min-width: 768px) {\n  .layout-center {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n.layout-3col {\n  margin: 0 0 330px;\n  z-index: 1;\n  background: #fff;\n}\n\n@media (max-width: 767px) {\n  .layout-3col {\n    margin: 0;\n  }\n}\n\n@media (min-width: 999px) {\n  .layout-3col__right-sidebar {\n    margin-top: 24px;\n  }\n}\n\nbody:not(.front) .layout-3col {\n  padding: 0 112px;\n}\n\n/* \n * THIS FILE CONTAINS ALL STYLE FOR CATEGORY LISTING PAGES\n * @author Shruti \n */\n.is-path-list h1 {\n  font-size: 24px;\n}\n\n.is-path-list .new-custom-search-form label {\n  display: none;\n}\n\n.is-path-list .new-custom-search-form input {\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  -ms-border-radius: 4px;\n  border-radius: 4px;\n  padding: 0 20px;\n  border: 1px solid #cccccc;\n  line-height: 40px;\n  float: left;\n}\n\n.is-path-list .new-custom-search-form input.form-text {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.is-path-list .new-custom-search-form input.form-text ::-webkit-input-placeholder {\n  color: #c00;\n}\n\n.is-path-list .new-custom-search-form input.form-text :-moz-placeholder {\n  color: #c00;\n}\n\n.is-path-list .new-custom-search-form input.form-text ::-moz-placeholder {\n  color: #c00;\n}\n\n.is-path-list .new-custom-search-form input.form-text :-ms-input-placeholder {\n  color: #c00;\n}\n\n.is-path-list .new-custom-search-form input[type='submit'] {\n  color: #4383cc;\n  background: #fff;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.is-path-list .new-custom-search-form .form-item {\n  float: left;\n  max-width: 250px;\n  margin: 0;\n}\n\n.is-path-list .new-custom-search-form .form-item {\n  max-width: 100%;\n}\n\n.is-path-list .item-list {\n  clear: both;\n  padding: 30px 0 0;\n}\n\n.is-path-list .item-list li {\n  list-style: none;\n  padding: 16px 0;\n  margin: 0;\n}\n\n.is-path-list .item-list li:last-child {\n  border-bottom: 0;\n}\n\n.is-path-list .item-list .row div {\n  font-size: 18px;\n  font-weight: 300;\n  margin: 0;\n}\n\n.is-path-list .item-list .row .title a {\n  font-weight: bold;\n}\n\n#block-resourcetypelistingblock .item-list {\n  padding: 0;\n}\n\n#block-resourcetypelistingblock .item-list li {\n  border: 0;\n  padding: 0;\n  margin: 0;\n}\n\n#block-resourcetypelistingblock .item-list li a {\n  -webkit-border-radius: 8px;\n  -moz-border-radius: 8px;\n  -ms-border-radius: 8px;\n  border-radius: 8px;\n  border: 1px solid #cccccc;\n  display: block;\n  padding: 25px;\n  margin: 10px 0;\n}\n\n#block-resourcetypelistingblock .resource-image {\n  background: url(\"../../../images/iconsprite.png\") no-repeat;\n}\n\n/* \n * THIS FILE CONTAINS ALL THE STYLES FOR HEADER\n * @author Shruti \n */\nheader {\n  background: #fff;\n  border-bottom: 1px solid #cccccc;\n  float: left;\n  width: 100%;\n}\n\nheader.sticky-header {\n  -webkit-box-shadow: 0 5px 5px rgba(0, 0, 0, 0.28);\n  -moz-box-shadow: 0 5px 5px rgba(0, 0, 0, 0.28);\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.28);\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n  visibility: visible;\n}\n\ndiv#block-nvli-branding {\n  float: left;\n  padding: 14px 24px;\n}\n\ndiv#block-nvli-branding.sticky-branding {\n  width: 50%;\n  max-width: 460px;\n}\n\n.site-logo img {\n  float: left;\n  margin: 0 20px 0 0;\n}\n\n.site-name {\n  float: left;\n  margin: 12px 0 0;\n}\n\n.site-name a {\n  color: #999999;\n  font-size: 24px;\n  font-weight: 300;\n}\n\ndiv#block-userlanguageblock {\n  float: right;\n  margin: 23px 10px;\n}\n\ndiv#block-userlanguageblock p {\n  margin: 0 5px;\n}\n\ndiv#block-userlanguageblock span {\n  margin: 0 5px;\n  color: #666666;\n}\n\ndiv#block-userlanguageblock span img {\n  width: 1vw;\n  margin: 0 3px;\n}\n\ndiv#block-userlanguageblock span.user-dropdown img:first-child {\n  width: 2vw;\n}\n\n/* \n * THIS FILE CONTAINS ALL THE FOOTER STYLES\n * @author Shruti \n */\nfooter.footer {\n  -webkit-box-shadow: inset 0 16px 40px rgba(0, 0, 0, 0.28);\n  -moz-box-shadow: inset 0 16px 40px rgba(0, 0, 0, 0.28);\n  box-shadow: inset 0 16px 40px rgba(0, 0, 0, 0.28);\n  background: #4a90e2;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  padding: 63px 16%;\n  display: inline-block;\n  z-index: -1;\n}\n\n@media (max-width: 767px) {\n  footer.footer {\n    position: relative;\n    padding: 63px 8%;\n  }\n}\n\nfooter.footer #block-logoimage-2,\nfooter.footer nav {\n  display: inline-block;\n  vertical-align: top;\n  width: 23%;\n}\n\n@media (max-width: 450px) {\n  footer.footer #block-logoimage-2,\n  footer.footer nav {\n    width: 100%;\n    text-align: center;\n  }\n  footer.footer #block-logoimage-2 li,\n  footer.footer nav li {\n    text-align: center;\n  }\n}\n\nfooter.footer nav h2,\nfooter.footer nav ul {\n  margin: 0;\n}\n\nfooter.footer nav h2,\nfooter.footer nav ul li a {\n  font-size: 18px;\n  color: #000;\n  line-height: 28px;\n}\n\nfooter.footer nav ul li a {\n  font-weight: 300;\n}\n\nfooter.footer #block-nvli-2 {\n  margin: 0 15%;\n}\n\n@media (max-width: 450px) {\n  footer.footer #block-nvli-2 {\n    margin: 20px 0;\n  }\n}\n\nfooter.footer #block-followus-2 {\n  float: right;\n}\n\n/* \n * THIS FILE CONTAINS ALL THE STYLES FOR HOMEPAGE\n * @author Shruti \n */\n.is-path-frontpage .homepage-banner-wrapper {\n  background: #fff;\n  float: left;\n  width: 100%;\n}\n\n.is-path-frontpage .layout-3col__full {\n  padding: 0 18px;\n}\n\n@media only screen and (max-width: 767px) {\n  .is-path-frontpage .layout-3col__full {\n    padding: 0;\n  }\n}\n\n.is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block {\n  -webkit-border-radius: 8px;\n  -moz-border-radius: 8px;\n  -ms-border-radius: 8px;\n  border-radius: 8px;\n  float: left;\n  width: 32.69%;\n  padding: 33px 40px 30px;\n  margin: 6px 12px 6px 0;\n  background: #f2f2f2;\n}\n\n@media only screen and (min-width: 768px) {\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block:nth-child(3n+3) {\n    margin: 6px 0;\n  }\n}\n\n@media only screen and (min-width: 980px) and (max-width: 1024px) {\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block {\n    width: 32.5%;\n  }\n}\n\n@media only screen and (min-width: 768px) and (max-width: 979px) {\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block {\n    width: 32%;\n  }\n}\n\n@media only screen and (min-width: 451px) and (max-width: 767px) {\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block {\n    width: 49%;\n    margin: 6px 2% 6px 0;\n  }\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block:nth-child(2n + 1) {\n    margin: 6px 0;\n  }\n}\n\n@media only screen and (max-width: 450px) {\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block {\n    width: 100%;\n    margin: 6px 0;\n  }\n}\n\n.is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block:nth-child(3n+4) {\n  clear: left;\n}\n\n@media only screen and (min-width: 451px) and (max-width: 767px) {\n  .is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block:nth-child(3n+4) {\n    clear: none;\n  }\n}\n\n.is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block .field--name-field-block-image {\n  float: left;\n  margin: 0 32px 0 0;\n}\n\n.is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block .field {\n  font-size: 24px;\n  color: #999999;\n  font-weight: 300;\n  line-height: 30px;\n}\n\n.is-path-frontpage .layout-3col__full .homepage-resources-wrapper .block .field--name-field-block-link {\n  color: #4383cc;\n}\n\n.is-path-frontpage .layout-3col__full .block .field--name-field-block-image img {\n  width: 4.3vw;\n}\n\n@media only screen and (max-width: 450px) {\n  .is-path-frontpage .layout-3col__full .block .field--name-field-block-image img {\n    width: 10vw;\n  }\n}\n\ndiv#block-homepagebanner-2 {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n}\n\ndiv#block-homepagebanner-2 video {\n  width: 100%;\n}\n\ndiv#block-homepagebanner-2 .field--type-text-with-summary .banner-text {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #fff;\n  width: 100%;\n  text-align: center;\n  font-size: 24px;\n  margin: 20px 0 0;\n  font-weight: 300;\n}\n\ndiv#block-homepagebanner-2 .field--type-text-with-summary .banner-text p {\n  margin: 15px 0;\n}\n\ndiv#block-homepagebanner-2 .field--type-text-with-summary .banner-text p:nth-child(2) {\n  font-size: 40px;\n}\n\n#block-customsearchblock-2 {\n  position: absolute;\n  top: 90px;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  z-index: 1;\n}\n\n#block-customsearchblock-2 #new-custom-search-form {\n  display: inline-block;\n  margin: 0 36.1%;\n}\n\n#block-customsearchblock-2 #new-custom-search-form label {\n  display: none;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input {\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  -ms-border-radius: 4px;\n  border-radius: 4px;\n  padding: 0 20px;\n  border: 1px solid #cccccc;\n  line-height: 40px;\n  float: left;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input.form-text {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input.form-text ::-webkit-input-placeholder {\n  color: #c00;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input.form-text :-moz-placeholder {\n  color: #c00;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input.form-text ::-moz-placeholder {\n  color: #c00;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input.form-text :-ms-input-placeholder {\n  color: #c00;\n}\n\n#block-customsearchblock-2 #new-custom-search-form input[type='submit'] {\n  color: #4383cc;\n  background: #fff;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n#block-customsearchblock-2 #new-custom-search-form .form-item {\n  float: left;\n  max-width: 250px;\n  margin: 0;\n}\n\n#block-customsearchblock-2.sticky-search-header {\n  position: relative;\n  top: 0;\n}\n\n#block-customsearchblock-2.sticky-search-header #new-custom-search-form {\n  float: right;\n  margin: 20px 20px 0 0;\n}\n\n#block-indiasancientpast-2 {\n  max-width: 68%;\n  margin: 30px 16%;\n  display: inline-block;\n}\n\n@media (max-width: 979px) {\n  #block-indiasancientpast-2 {\n    max-width: 100%;\n    margin: 30px 0;\n  }\n}\n\n#block-indiasancientpast-2 .field:not(.field--name-field-featured-cont) {\n  float: left;\n  width: 56%;\n}\n\n@media only screen and (max-width: 450px) {\n  #block-indiasancientpast-2 .field:not(.field--name-field-featured-cont) {\n    width: 100%;\n  }\n}\n\n@media only screen and (min-width: 451px) and (max-width: 767px) {\n  #block-indiasancientpast-2 .field:not(.field--name-field-featured-cont) {\n    width: 47%;\n  }\n}\n\n#block-indiasancientpast-2 .field--name-field-featured-cont {\n  float: left;\n}\n\n@media only screen and (min-width: 450px) {\n  #block-indiasancientpast-2 .field--name-field-featured-cont {\n    margin: 0 35px 0 0;\n  }\n}\n\n#block-indiasancientpast-2 .field--name-field-featured-cont img {\n  -webkit-box-shadow: 0 16px 40px rgba(0, 0, 0, 0.28);\n  -moz-box-shadow: 0 16px 40px rgba(0, 0, 0, 0.28);\n  box-shadow: 0 16px 40px rgba(0, 0, 0, 0.28);\n}\n\n#block-indiasancientpast-2 .field--name-field-content-title,\n#block-indiasancientpast-2 .field--name-field-content-author {\n  color: #4a90e2;\n  text-transform: capitalize;\n}\n\n#block-indiasancientpast-2 .field--name-field-content-title {\n  font-size: 32px;\n  font-weight: 300;\n  margin: 0 0 10px;\n}\n\n@media only screen and (max-width: 450px) {\n  #block-indiasancientpast-2 .field--name-field-content-title {\n    margin: 10px 0;\n  }\n}\n\n#block-indiasancientpast-2 .field--name-field-content-author {\n  font-size: 24px;\n  font-weight: 500;\n}\n\n#block-indiasancientpast-2 .field--name-body {\n  overflow: hidden;\n  max-height: 157px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 5;\n  text-overflow: -o-ellipsis-lastline;\n  margin: 34px 0;\n}\n\n#block-indiasancientpast-2 .field--name-body p {\n  font-size: 22px;\n  margin: 0;\n  font-weight: 300;\n  line-height: 26px;\n  color: #262626;\n}\n\n#block-indiasancientpast-2 .field--name-field-block-link a {\n  -webkit-border-radius: 8px;\n  -moz-border-radius: 8px;\n  -ms-border-radius: 8px;\n  border-radius: 8px;\n  font-size: 24px;\n  border: 2px solid #4383cc;\n  padding: 18px;\n  margin: 29px 0 0;\n  display: inline-block;\n  width: 280px;\n  max-width: 100%;\n  text-align: center;\n}\n","// sass-lint:disable indentation, no-color-keywords\n\n// Colors\n//\n// Use the `color()` function to add colors to CSS properties. To learn more,\n// [read the Chroma documentation](http://johnalbin.github.io/chroma/).\n//\n// Markup: chroma.twig\n//\n// Weight: -1\n//\n// Style guide: sass.colors\n\n// Define the default color scheme's color names.\n$chroma: define-default-color-scheme('branding', 'The site\\'s main colors. Can be used to define colors in other color schemes.');\n\n$chroma: add-colors((\n  black:                  #000,\n  grey-dark:              ('black' lighten 40%), // #666\n  'grey':                 ('black' lighten 60%), // #999\n  grey-light:             ('black' lighten 80%), // #ccc\n  grey-extra-light:       ('black' lighten 93.33%), // #eee\n  white:                  #fff,\n  resource-bg:            #f2f2f2,\n  footer-bg:              #4a90e2,\n  title-color:            #4a90e2,\n  p-color:                #262626,\n  blue:                   #4383cc,\n  red:                    #c00,\n  yellow:                 #fd0,\n));\n\n// Define color names for functional uses.\n$chroma: define-color-scheme('functional', 'Colors used by functional parts of the design.');\n$chroma: add-colors('functional', (\n  // Colors used in the main content area.\n  text:                   'black',\n  text-bg:                'white',\n\n  link:                   'blue',\n  link-visited:           ('blue' darken 20%),\n  link-active:            'red',\n\n  border:                 'grey-light',\n\n  autocomplete:           'text',\n  autocomplete-bg:        'text-bg',\n  autocomplete-select:    'white',\n  autocomplete-select-bg: 'blue',\n\n  body-bg:                'text-bg',\n\n  button:                 'text',\n  button-disabled:        'grey',\n\n  fieldset-summary:       'grey',\n  form-error:             'red',\n\n  mark-highlight:         'red',\n  mark-bg:                'yellow',\n\n  menu-active:            'text',\n\n  preview-bg:             ('yellow' lighten 43%),\n\n  progress-bar:           'blue',\n  progress-bar-bg:        'grey-light',\n  progress-bar-border:    'grey-dark',\n\n  resizable-grippie:      'grey-extra-light',\n\n  row-stripe:             'grey-extra-light',\n  row-disabled:           'grey-light',\n\n  skip-link:              'white',\n  skip-link-bg:           'grey-dark',\n\n  status:                 'blue',\n  status-bg:              (status lighten 62%),\n  status-highlight:       text,\n  warning:                text,\n  warning-bg:             ('yellow' lighten 45%),\n  warning-border:         'yellow',\n  error:                  'red',\n  error-bg:               (error lighten 57%),\n\n  tabs-border:            'border',\n  tabs-bg:                'text-bg',\n  tab:                    'text',\n  tab-text-shadow:        'white',\n  tab-bg:                 ('grey-light' lighten 6.66%),\n  tab-secondary:          'grey-dark',\n\n  table-drag:             ('yellow' lighten 43%),\n  table-select:           ('yellow' lighten 47%),\n\n  watermark:              'grey-extra-light',\n));\n\n$chroma-active-scheme: 'functional';\n","// Define spacing (with fallbacks).\n//\n// @param string $type\n//   The type of spacing: margin, padding, margin-top, etc.\n// @param number|list|string $spacing\n//   Multiple of $base-line-height to be used or px value to be converted.\n//   Can be a SASS list using the same parameters as the CSS margin property:\n//   i.e. top right bottom left, 1 0 2 0.\n//   Can also be the string \"auto\" when used as margin.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin spacing($property, $spacing, $context: $base-font-size) {\n  $allowed-types: \"multiplier\", \"px\", \"list\";\n  $type: typey-validator($spacing, $allowed-types);\n\n  $px-fallback-list: ();\n  $converted-list: ();\n\n  @each $x in $spacing {\n    @if $base-unit == rem {\n      $allowed-types: \"multiplier\", \"px\", \"auto\";\n      $type: typey-validator($x, $allowed-types);\n      @if $type == \"multiplier\" {\n        $spacing: $x * $base-line-height;\n        $px-fallback-list: join($px-fallback-list, $spacing, $separator: space);\n      }\n      @if $type == \"px\" {\n        $px-fallback-list: join($px-fallback-list, $x, $separator: space);\n      }\n      @if $type == \"auto\" {\n        $px-fallback-list: join($px-fallback-list, $x, $separator: space);\n      }\n    }\n    $spacing: spacing($x, $context);\n    $converted-list: join($converted-list, $spacing, $separator: space);\n  }\n\n  @if $base-unit == rem {\n    @if $rem-fallback == true {\n      #{$property}: $px-fallback-list;\n    }\n  }\n  #{$property}: $converted-list;\n}\n\n// Wrapper mixins for various spacing properties.\n// These can be used to provide easily sized spacing in the base unit.\n//\n// @param number|list|string $x\n//   Multiple of $base-line-height to be used or px value to be converted.\n//   Can be a SASS list using the same parameters as the CSS margin property:\n//   i.e. top right bottom left, 1 0 2 0.\n//   Can also be the string \"auto\" when used as margin.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin margin($x, $context: $base-font-size) {\n  @include spacing(margin, $x, $context);\n}\n@mixin margin-top($x, $context: $base-font-size) {\n  @include spacing(margin-top, $x, $context);\n}\n@mixin margin-bottom($x, $context: $base-font-size) {\n  @include spacing(margin-bottom, $x, $context);\n}\n@mixin margin-left($x, $context: $base-font-size) {\n  @include spacing(margin-left, $x, $context);\n}\n@mixin margin-right($x, $context: $base-font-size) {\n  @include spacing(margin-right, $x, $context);\n}\n@mixin padding($x, $context: $base-font-size) {\n  @include spacing(padding, $x, $context);\n}\n@mixin padding-top($x, $context: $base-font-size) {\n  @include spacing(padding-top, $x, $context);\n}\n@mixin padding-bottom($x, $context: $base-font-size) {\n  @include spacing(padding-bottom, $x, $context);\n}\n@mixin padding-left($x, $context: $base-font-size) {\n  @include spacing(padding-left, $x, $context);\n}\n@mixin padding-right($x, $context: $base-font-size) {\n  @include spacing(padding-right, $x, $context);\n}\n","// Output a number in the $base-unit.\n//\n// @param number $number\n//   The number (without unit) to output.\n//\n// @return number\n//   The number with the base unit\n@function typey-output-in-base-unit($number) {\n  @if $number == 0 {\n    @return 0;\n  }\n  @if $base-unit == rem {\n    @return $number * 1rem;\n  }\n  @if $base-unit == px {\n    @return $number * 1px;\n  }\n  @if $base-unit == em {\n    @return $number * 1em;\n  }\n}\n\n// Output a number in a chosen unit.\n//\n// @param number $number\n//   The number (without unit) to output.\n// @param string $unit\n//   (optional) The unit to output, either em, px or rem.\n//\n// @return number\n//   The number with the base unit\n@function typey-output-in-unit($number, $unit: $base-unit) {\n  @if $number == 0 {\n    @return 0;\n  }\n  @if $unit == rem {\n    @return $number * 1rem;\n  }\n  @if $unit == px {\n    @return $number * 1px;\n  }\n  @if $unit == em {\n    @return $number * 1em;\n  }\n}\n\n// Remove the unit from a number.\n//\n// @param number $number\n//   The number (with unit) to convert. Allowed units: any\n//\n// @return number\n//   The number without the unit.\n@function typey-strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n  @return $number;\n}\n","/* \n * THIS FILE CONTAINS ALL STYLE FOR CATEGORY LISTING PAGES\n * @author Shruti \n */\n\n.is-path-list {\n  h1 {\n    font-size: font-size(xl);      \n  }\n\n  .new-custom-search-form {\n    @include search-block;\n\n    .form-item {\n      max-width: 100%;\n    }\n  }\n\n  .item-list {\n    clear: both;\n    padding: 30px 0 0;\n\n    li {\n      list-style: none;\n      padding: 16px 0;\n      margin: 0;\n\n      &:last-child {\n        border-bottom: 0;\n      }\n    }\n\n    .row {\n      div {\n        font-size: font-size(m) + 2;\n        font-weight: weight(light);\n        margin: 0;\n      }\n\n      .title a {\n        font-weight: weight(bold);\n      }\n    }\n  }\n}\n\n#block-resourcetypelistingblock {\n  .item-list {\n    padding: 0;\n\n    li {\n      border: 0;\n      padding: 0;\n      margin: 0;\n\n      a {\n        @include border-radius(8px);\n        border: 1px solid color(grey-light);\n        display: block;\n        padding: 25px;\n        margin: 10px 0;\n      }\n    }\n  }\n\n  .resource-image {\n    background: url(\"../../../images/iconsprite.png\") no-repeat;\n  }  \n}\n","// Functions module\n//\n// The main module for Chroma.\n//\n// Weight: -1\n//\n// Style guide: functions\n\n// Import the global variables and internal functions needed by all of Chroma.\n@import './variables';\n@import './internals';\n\n// Initialize the $chroma data structure.\n$chroma: _chroma-init();\n\n\n// is-dangerous-color-keyword($name)\n//\n// This function is used by color(), add-colors() and others to check if the\n// given color name is a \"dangerous\" color keyword. Returns false or causes the\n// Sass compilation to die with an error message containing the name of the\n// dangerous color keyword.\n//\n// If a real Sass color is given as a color name to Chroma, it is in danger of\n// being converted to a hexadecimal value before Chroma can read the name. (This\n// happens when Sass' \"compressed\" output style is used.) And some hex values\n// map to more than one keyword (e.g. gray/grey and fuchsia/magenta), so the\n// original name would be irretrievable.\n//\n// Since Chroma will confuse fuchsia and magenta (among others) under Sass'\n// \"compressed\" output style, it would generate confusing results. To prevent\n// this, Chroma halts Sass compilation when it detects an ambiguous color\n// keyword. While the error only occurs under Sass' \"compressed\" output style,\n// Chroma halts under all output styles. Otherwise, Chroma could behave\n// differently on production vs. development environments. If you are really\n// sure Chroma will never be run with Sass' \"compressed\" output style, you can\n// disable this feature by setting `$chroma-die-on-dangerous-keyword: false;`.\n//\n// $name - The name of the color to check.\n//\n// Style guide: functions.is-dangerous-color-keyword\n@function is-dangerous-color-keyword($name) {\n  // First, double-check if this is a keyword in a string.\n  @if _is-keyword-string($name) {\n    @return false;\n  }\n\n  @if type-of($name) == 'color' {\n    $lookup: '';\n    @if _is-old-libsass() {\n      // Forcibly convert a color keyword into a string with a \"salt\".\n      $lookup: \"keyword:#{$name}\";\n    }\n    @else {\n      // Convert the color to a string.\n      $lookup: inspect($name);\n    }\n    // Check if Sass will convert the color into a hex value that we can't\n    // convert back to a keyword.\n    @if map-has-key($_chroma-dangerous-keywords, $lookup) {\n      @if $chroma-die-on-dangerous-keyword {\n        @error \"Sass will convert #{$name} into a hexidecimal value when it uses the \\\"compressed\\\" output style and Chroma will not be able to determine if the original name was #{map-get($_chroma-dangerous-keywords, $lookup)}. To prevent this error, quote the keyword like this: '#{$name}'.\";\n      }\n      @else {\n        @return map-get($_chroma-dangerous-keywords, $lookup);\n      }\n    }\n    // Check if Sass _has_ converted the color into a hex value that we can't\n    // convert back to a keyword.\n    @else if map-has-key($_chroma-dangerous-converted-keywords, $lookup) {\n      @error \"Sass has converted a #{$_chroma-spelling} keyword into the hexidecimal value, #{$name}, and Chroma was not be able to determine if the original name was #{map-get($_chroma-dangerous-converted-keywords, $lookup)}. To prevent this error, use quotes around the keyword.\";\n    }\n  }\n  @return false;\n}\n\n// is-color-keyword($name)\n//\n// Checks if the given name is a color keyword. Returns false or a string\n// containing the name of the color keyword.\n//\n// $name - The name of the color to check.\n//\n// Style guide: functions.is-color-keyword\n@function is-color-keyword($name) {\n  // First, double-check if this is a keyword in a string.\n  @if _is-keyword-string($name) {\n    @return false;\n  }\n\n  // If a real Sass color is given, it is in danger of being converted to a\n  // hexadecimal value before we can read the name. And some hex values map to\n  // more than one keyword (e.g. gray and grey), so the original name would be\n  // irretrievable.\n  //\n  // While is-dangerous-color-keyword() would normally @error before it\n  // returned, if it does return a true value, we should continue inspecting\n  // $name so we can convert it to a string.\n  $is-dangerous: is-dangerous-color-keyword($name);\n\n  @if type-of($name) == 'color' {\n    $lookup: '';\n\n    @if _is-old-libsass() {\n      // Forcibly convert a color keyword into a string with a \"salt\".\n      $lookup: \"keyword:#{$name}\";\n    }\n    @else {\n      // Convert the color to a string.\n      $lookup: inspect($name);\n    }\n\n    @return if(map-has-key($_chroma-css4-color-keywords, $lookup), map-get($_chroma-css4-color-keywords, $lookup), false);\n  }\n\n  @return false;\n}\n\n// chroma-to-string($name)\n//\n// Cast the color name to a string to ensure color keywords do not cause\n// problems as map keys.\n//\n// $name - The name of the color to convert.\n//\n// Style guide: functions.chroma-to-string\n@function chroma-to-string($name) {\n  // If the name is a color keyword, is-color-keyword() converts it to a string.\n  $is-keyword: is-color-keyword($name);\n  @return if($is-keyword, $is-keyword, $name);\n}\n\n// color([$scheme,] $name)\n//\n// Returns a color value given a key word and optional color scheme. If the\n// named color is not in the color scheme, the color scheme's parent scheme will\n// be searched.\n//\n// Usage:\n// ```scss\n// .ex {\n//   background-color: color(body-bg);\n//   border: 1px solid color(grace, border);\n// }\n// ```\n//\n// $scheme - Optional color scheme to choose from; defaults to\n//           `$chroma-active-scheme`.\n// $name   - The name of the requested color.\n//\n// Style guide: functions.color\n@function color($scheme, $name: null) {\n  @if type-of($name) == 'null' {\n    // The shortcut syntax was used since $name is null. Move the color name to\n    // the $name parameter and set a default value to $scheme.\n    $name: $scheme;\n    $scheme: $chroma-active-scheme;\n  }\n\n  // Confirm the scheme exists.\n  @if not chroma-has-scheme($scheme) {\n    @error 'The #{$_chroma-spelling} scheme \"#{$scheme}\" was not found.';\n  }\n  // Cast the color name to a string to ensure color keywords do not cause\n  // problems as map keys.\n  $name: chroma-to-string($name);\n  // Find the actual scheme used by the named color.\n  $actual-scheme: chroma-has-color($name, $scheme);\n  @if not $actual-scheme {\n    @error 'The #{$_chroma-spelling} \"#{$name}\" was not found.';\n  }\n  $color: map-get(map-get($chroma, 'names'), \"#{$actual-scheme}::#{$name}\");\n  @if $actual-scheme == $scheme {\n    @return map-get($color, 'value');\n  }\n  @else {\n    // The value of $actual-scheme::$name is based on colors in $actual-scheme\n    // and its parent schemes. But one or more of the parent colors may be\n    // defined (overridden) in $scheme too, so we need to check the full\n    // reference chain.\n    $chain: ();\n    $ref: map-get($color, 'reference');\n    @if $ref and map-get($color, 'function') {\n      $chain: append($chain, $color);\n    }\n    @while $ref {\n      $actual-scheme: chroma-has-color($ref, $scheme);\n      $color: map-get(map-get($chroma, 'names'), \"#{$actual-scheme}::#{$ref}\");\n      $ref: map-get($color, 'reference');\n      // Save any color that has a function unless it is the final color in the\n      // reference chain.\n      @if $ref and map-get($color, 'function') {\n        $chain: append($chain, $color);\n      }\n    }\n    // Find the value for the last non-reference in the chain.\n    $value: map-get($color, 'value');\n    // If the reference chain contains functions, we need to recalculate all\n    // the values back up the chain.\n    @if length($chain) > 0 {\n      @for $i from length($chain) through 1 {\n        $function: map-get(nth($chain, $i), 'function');\n        $parameters: map-get(nth($chain, $i), 'parameters');\n        $parameters: set-nth($parameters, 1, $value);\n        $value: call($function, $parameters...);\n      }\n    }\n    @return $value;\n  }\n}\n\n// define-color-scheme($scheme [, $description] [, $parent])\n//\n// Define a new color scheme and, optionally, set its description and parent\n// color scheme.\n//\n// When searching for a color and the color scheme does not define that\n// particular color, the parent color scheme will be checked to see if it\n// defines that color.\n//\n// By default, all color schemes inherit their colors from the default color\n// scheme. Optionally, a color scheme can choose to inherit from a different\n// color scheme by specifying the `$parent` parameter.\n//\n// Usage:\n// ```scss\n// $chroma: define-color-scheme(taiwan, \"Taiwan's colors\");\n// $chroma: define-color-scheme(taipei, \"Taipei's colors\", $parent: taiwan);\n// ```\n//\n// $scheme      - The name of the new color scheme.\n// $description - Optional description of the color scheme.\n// $parent      - The parent color scheme to inherit colors from; defaults to\n//                `default` (i.e. `$CHROMA_DEFAULT_SCHEME`).\n//\n// Style guide: functions.define-color-scheme\n@function define-color-scheme($scheme, $description: '', $parent: $CHROMA_DEFAULT_SCHEME) {\n  // Check if we are defining the default color scheme.\n  @if $scheme == $CHROMA_DEFAULT_SCHEME {\n    $parent: false;\n  }\n\n  // Check parent reference exists.\n  @if $parent and not chroma-has-scheme($parent) {\n    @error 'Cannot set the parent of #{scheme} to \"#{$parent}\" because the #{$_chroma-spelling} scheme \"#{$parent}\" was not found.';\n  }\n\n  $schemes: map-merge(\n    map-get($chroma, 'schemes'),\n    ($scheme: (\n      'description': $description,\n      'parent': $parent,\n    ))\n  );\n\n  $chroma: map-merge(\n    $chroma,\n    ('schemes': $schemes)\n  ) !global;\n\n  @return $chroma;\n}\n\n// define-default-color-scheme([$name,] $description)\n//\n// Sets the description of the default color scheme.\n//\n// Usage:\n// ```scss\n// $chroma: define-default-color-scheme('Default colors');\n// // or:\n// $chroma: define-default-color-scheme('branding', 'Basic branding colors');\n// ```\n//\n// $name - Optional: default color scheme name; defaults to `default`.\n// $description - Description of the default color scheme.\n//\n// Style guide: functions.define-default-color-scheme\n@function define-default-color-scheme($name, $description: null) {\n  @if type-of($description) == 'null' {\n    // The shortcut syntax was used since $description is null. Move the actual\n    // description to the $description parameter.\n    $description: $name;\n    @return define-color-scheme($CHROMA_DEFAULT_SCHEME, $description);\n  }\n\n  // Remove the old default.\n  $schemes: map-remove(map-get($chroma, 'schemes'), $CHROMA_DEFAULT_SCHEME);\n  // Update all child schemes of the default.\n  @each $scheme-name, $map in $schemes {\n    @if map-get($map, 'parent') == $CHROMA_DEFAULT_SCHEME {\n      $schemes: map-merge(\n        $schemes,\n        ($scheme-name: (\n          'description': map-get($map, 'description'),\n          'parent': $name,\n        ))\n      );\n    }\n  }\n  // Set the new default scheme name and, if needed, the new active scheme.\n  @if $chroma-active-scheme == $CHROMA_DEFAULT_SCHEME {\n    $chroma-active-scheme: $name !global;\n  }\n  $CHROMA_DEFAULT_SCHEME: $name !global;\n  // Add the default scheme (and the updated schemes) back into $chroma.\n  $chroma: map-merge(\n    $chroma,\n    ('schemes': map-merge(\n      $schemes,\n      ($name: (\n        'description': $description,\n        'parent': false,\n      ))\n    ))\n  ) !global;\n\n  @return $chroma;\n}\n\n// add-colors([$scheme,] $colors)\n//\n// Add the colors to an existing color scheme.\n//\n// Usage:\n// ```scss\n// $chroma: add-colors('admiral', (\n//  link:        #0000cc,\n//  nav:         link, // Sets this color to the same value as the \"link\" color.\n//  nav-visited: (nav darken 20%), // Takes the \"nav\" color and passes it\n//                                 // through darken([color], 20%)\n//  nav-focus:   (nav lighten 10%),\n// ));\n// ```\n//\n// If you wish to add colors to the active scheme, you can just use:\n// ```scss\n// $chroma: add-colors((\n//  link:        #0000cc,\n//  nav:         link,\n//  nav-visited: (link darken 20%),\n//  nav-focus:   (link lighten 10%),\n// ));\n// ```\n//\n// $scheme - Optional: color scheme to add colors to; defaults to\n//           `$chroma-active-scheme`.\n// $colors - A Sass map containing the new colors.\n//\n// Style guide: functions.add-colors\n@function add-colors($scheme, $colors: null) {\n  @if type-of($scheme) == 'map' or type-of($scheme) == 'list' {\n    // The shortcut syntax was used since only a map of $colors was given as the\n    // first parameter. Move the map to the $colors parameter and set a default\n    // value to $scheme.\n    $colors: $scheme;\n    $scheme: $chroma-active-scheme;\n  }\n  @if not chroma-has-scheme($scheme) {\n    @error 'The #{$_chroma-spelling} scheme \"#{$scheme}\" was not found.';\n  }\n  @each $color-name, $color-value in $colors {\n    // Cast the color name to a string to ensure color keywords do not cause\n    // problems as map keys.\n    $color-name: chroma-to-string($color-name);\n    $color-function: false;\n    $color-parameters: ();\n    // If the \"value\" is a list, its a value plus a function.\n    @if type-of($color-value) == 'list' {\n      $color-function: nth($color-value, 2);\n      @if not function_exists($color-function) {\n        @error 'The function \"#{$color-function}\" was not found when adding the #{$_chroma-spelling} \"#{$color-name}\".';\n      }\n      // Include the color value in the list of function parameters.\n      @for $i from 1 through length($color-value) {\n        @if $i != 2 {\n          $color-parameters: append($color-parameters, nth($color-value, $i));\n        }\n      }\n      $color-value: nth($color-value, 1);\n    }\n    // If the value given is a color, just add it.\n    @if type-of($color-value) == 'color' and not (_is-old-libsass() and _is-keyword-string($color-value)) {\n      @if $color-function {\n        $color-value: call($color-function, $color-parameters...);\n      }\n      $chroma: _chroma-add-name($scheme, $color-name,\n        $value          : $color-value,\n        $reference      : false,\n        $referenced_by  : (),\n        $function       : $color-function,\n        $parameters     : $color-parameters\n      ) !global;\n    }\n    // If the value given is a reference to another color...\n    @else if type-of($color-value) == 'string' or (_is-old-libsass() and _is-keyword-string($color-value)) {\n      $ref: $color-value;\n      // Find the referenced color.\n      $scheme-of-reference: chroma-has-color($ref, $scheme);\n      @if not $scheme-of-reference {\n        @error 'The #{$_chroma-spelling} \"#{$ref}\" was not found when adding the #{$_chroma-spelling} \"#{$color-name}\".';\n      }\n      $referenced-color: map-get(map-get($chroma, 'names'), \"#{$scheme-of-reference}::#{$ref}\");\n      // Add the new color.\n      $new-value: map-get($referenced-color, 'value');\n      @if $color-function {\n        $color-parameters: set-nth($color-parameters, 1, $new-value);\n        $new-value: call($color-function, $color-parameters...);\n      }\n      $chroma: _chroma-add-name($scheme, $color-name,\n        $value         : $new-value,\n        $reference     : $ref,\n        $referenced_by : (),\n        $function      : $color-function,\n        $parameters    : $color-parameters\n      ) !global;\n      // Document the new color in all the referenced_by lists.\n      @while $ref {\n        $chroma: _chroma-add-name($scheme-of-reference, $ref,\n          $value         : map-get($referenced-color, 'value'),\n          $reference     : map-get($referenced-color, 'reference'),\n          $referenced_by : append(\n            map-get($referenced-color, 'referenced_by'),\n            $color-name\n          ),\n          $function      : map-get($referenced-color, 'function'),\n          $parameters    : map-get($referenced-color, 'parameters')\n        ) !global;\n        $ref: map-get($referenced-color, 'reference');\n        @if $ref {\n          $scheme-of-reference: chroma-has-color($ref, $scheme);\n          $referenced-color: map-get(map-get($chroma, 'names'), \"#{$scheme-of-reference}::#{$ref}\");\n        }\n      }\n    }\n    @else {\n      @error 'Unexpected value, \"#{$color-value}\", given for #{$_chroma-spelling} \"#{$color-name}\".';\n    }\n  }\n\n  @return $chroma;\n}\n\n// define-skins($skins)\n//\n// Defines one or more color schemes as being a skin. For each of the specified\n// color schemes, `define-skins()` will tell Chroma to use the scheme with the\n// corresponding CSS selector when the `skin()` mixin is used.\n//\n// Usage:\n// ```scss\n// $chroma: define-skins((\n//   'scheme1': '.is-scheme1-skin',\n//   'scheme2': '.is-scheme2-skin',\n//   'scheme3': 'html > body.this-works-but-is.way.too.specific.IMHO',\n// ));\n// ```\n//\n// $skins - A map of color schemes and their CSS parent selectors. Each key in\n// the map must be the name of an existing color scheme. The value of each key\n// is the CSS parent selector that triggers the use of the defined scheme\n// instead of the default color scheme. We recommend using a simple CSS selector\n// like `.is-CUSTOMNAME-skin`.\n//\n// Style guide: skin.define-skins\n@function define-skins($skins) {\n  @each $scheme, $selector in $skins {\n    @if not chroma-has-scheme($scheme) {\n      @error 'The #{$_chroma-spelling} scheme \"#{$scheme}\" was not found.';\n    }\n    @if type-of($selector) != 'string' {\n      @error 'The selector for the #{$scheme} skin was a #{type-of($selector)}, but should be a string.';\n    }\n  }\n\n  $chroma: map-merge(\n    $chroma,\n    ('skins': map-merge(\n      map-get($chroma, 'skins'),\n      $skins\n    ))\n  ) !global;\n\n  @return $chroma;\n}\n\n// define-skin($scheme, $selector)\n//\n// Deprecated: Will be removed in Chroma 2.0.0. Use `define-skins()` instead.\n//\n// Weight: 100\n//\n// Style guide: skin.define-skin\n@function define-skin($scheme, $selector) {\n  @warn \"The define-skin() function is deprecated. Use define-skins() instead.\";\n  @return define-skins(($scheme: $selector));\n}\n","// Variables\n//\n// Set variables for this site before a library sets its !default value.\n//\n// Style guide: sass.variables\n\n\n// Browser support\n//\n// For older versions of browsers, some Sass relies on the `support-for()` to\n// control whether extra CSS is needed to be output. The `support-for()`\n// function and the `$support-for` variable are documented on the [support-for\n// homepage](https://github.com/JohnAlbin/support-for).\n//\n// Style guide: sass.variables.support-for\n\n// Support the same browsers as normalize.css v3.\n// Possible keys: chrome, edge, firefox, ie, opera, safari, '*'\n$support-for: (\n  // IE 9-11\n  ie:  9,\n  // The last 4 versions of all other browsers.\n  '*': -4,\n);\n\n\n// Font faces, stacks and sizes.\n//\n// Font styling and line heights are controlled by the several variables that\n// used by mixins like `type-layout()`, `margin-top()`, and `margin-bottom()`.\n// These variable and mixins are documented on the [Typey\n// homepage](https://github.com/jptaranto/typey).\n//\n// Style guide: sass.variables.typey\n\n// The font size set on the root html element.\n$base-font-size:    16px;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height:  24px;\n\n// The font sizes in our type hierarchy as tee shirt sizes.\n$font-size: (\n  xxl:              32px,\n  xl:               24px,\n  l:                20px,\n  m:                $base-font-size,\n  s:                14px,\n  xs:               10px\n);\n\n// Typey allows you to alter font weights site-wide with this map.\n$font-weight: (\n  bold:             bold,\n  medium:           500,\n  normal:           normal,\n  light:            300,\n  lighter:          lighter,\n);\n\n// The following font family declarations use widely available fonts.\n// A user's web browser will look at the comma-separated list and will\n// attempt to use each font in turn until it finds one that is available\n// on the user's computer. The final \"generic\" font (sans-serif, serif or\n// monospace) hints at what type of font to use if the web browser doesn't\n// find any of the fonts in the list.\n\n// Serif font stacks.\n$times-new-roman: 'Times New Roman', Times, Georgia, 'DejaVu Serif', serif;\n$times:           Times, 'Times New Roman', Georgia, 'DejaVu Serif', serif;\n$georgia:         Georgia, 'Times New Roman', 'DejaVu Serif', serif;\n\n// Sans-serif font stacks.\n$verdana:         Verdana, Tahoma, 'DejaVu Sans', sans-serif;\n$tahoma:          Tahoma, Verdana, 'DejaVu Sans', sans-serif;\n$helvetica:       Helvetica, Arial, 'Nimbus Sans L', sans-serif;\n$arial:           Arial, Helvetica, 'Nimbus Sans L', sans-serif;\n$impact:          Impact, 'Arial Narrow', Helvetica, sans-serif;\n$helveticaneue:   Helvetica Neue, Arial, sans-serif;\n\n// Monospace font stacks.\n// For an explanation of why \"sans-serif\" is at the end of this list, see\n// http://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/\n$menlo:           Menlo, 'DejaVu Sans Mono', 'Ubuntu Mono', Courier, 'Courier New', monospace, sans-serif;\n\n// The font faces you specify in the $typefaces map can be used in the\n// typeface() mixin.\n$typefaces: (\n  body: (\n    font-family: $helveticaneue,\n  ),\n  monospace: (\n    font-family: $menlo,\n  ),\n  compact: (\n    font-family: $impact,\n    weight: bold,\n    case: uppercase,\n    // We could also specify the following property:\n    // letter-spacing: .5px,\n  ),\n);\n\n// Output a horizontal grid to help with debugging typography.\n$typey-debug: false;\n\n// The length unit in which to output font size and margin values.\n// Supported values: px, em, rem.\n$base-unit:         'px';\n\n// px fallbacks for rem units are needed for IE 8 and earlier.\n$rem-fallback:      false;\n\n\n// Breakpoints\n//\n// Use the `respond-to()` mixin to use named breakpoints. Documentation is\n// available in the [Breakpoint wiki\n// pages](https://github.com/at-import/breakpoint/wiki/Respond-To).\n//\n// Style guide: sass.variables.breakpoints\n\n@include add-breakpoint(xxxs, (333px, 'no-query' true));\n@include add-breakpoint(xxs,  (444px, 'no-query' true));\n@include add-breakpoint(xs,   (555px, 'no-query' true));\n@include add-breakpoint(s,    (666px, 'no-query' true));\n@include add-breakpoint(m,    (777px, 'no-query' true));\n@include add-breakpoint(l,    (888px, 'no-query' true));\n@include add-breakpoint(xl,   (999px, 'no-query' true));\n@include add-breakpoint(xxl,  (1111px));\n@include add-breakpoint(xxxl, (1222px));\n\n// Output media queries where the above px are converted to ems.\n// @include breakpoint-set('to ems', true);\n\n\n// Zen grids\n//\n// The default grid system is built using the Zen Grids sass module. Full\n// documentation is available on the [Zen Grids website](http://zengrids.com/).\n//\n// Note: if you are more comfortable using another grid system, you can easily\n// remove Zen Grids and its layouts.\n//\n// Style guide: sass.variables.zen-grids\n\n// These are needed for all breakpoints on all layouts.\n$zen-auto-include-grid-item-base: false;\n$zen-box-sizing: universal-border-box;\n\n// First we set the values we need for the mobile version of our layouts (the\n// version that does _not_ appear inside any @media queries.)\n$zen-columns: 1;\n$zen-gutters: 40px;\n\n// Then we set the values we need for each of the layouts at larger media query\n// sizes. Note how the names of the layouts match the names of our breakpoints\n// above. That allows a single zen-respond-to() to both use the proper item\n// from $zen-layouts and from $breakpoints.\n$zen-layouts: (\n  m: (\n    columns: 2,\n    // The gutters in the layouts are larger on mobile.\n    gutters: 25px,\n  ),\n  xl: (\n    columns: 3,\n    gutters: 25px,\n  ),\n);\n\n// See $include-rtl below.\n$zen-rtl-selector: '[dir=\"rtl\"]';\n\n\n// Miscellaneous variables\n//\n// `$indent-amount` controls the amount lists, blockquotes and comments are indented.\n//\n// `$include-rtl` controls whether RTL styles are output. Rather than include a separate `*-rtl.css` file, Zen 6 uses Drupal 8's standard `[dir=\"rtl\"]` selector for RTL language support.\n//\n// weight: 10\n//\n// Style guide: sass.variables.misc\n\n$indent-amount: 2 * $base-font-size;\n\n$include-rtl: true;\n// Automatically turn off Zen Grids' RTL support if $include-rtl is false.\n@if not $include-rtl {\n  $zen-rtl-selector: false !global;\n}\n","/* \n * THIS FILE CONTAINS ALL THE STYLES FOR HEADER\n * @author Shruti \n */\n\nheader {\n  background: color(white);\n  border-bottom: 1px solid color(grey-light);\n  float: left;\n  width: 100%;\n\n  &.sticky-header {\n    @include box-shadow(0, 5px, 5px, rgba(0, 0, 0, .28));\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 3;\n    visibility: visible;\n  }\n}\n\ndiv#block-nvli-branding {\n  float: left;\n  padding: 14px 24px;\n\n  &.sticky-branding {\n    width: 50%;\n    max-width: 460px;\n  }\n}\n\n.site-logo {\n  img {\n    float: left;\n    margin: 0 20px 0 0;\n  }\n}\n\n.site-name {\n  float: left;\n  margin: 12px 0 0;\n\n  a {\n    color: color('grey');\n    font-size: font-size(xl);\n    font-weight: weight(light);\n  }\n}\n\ndiv#block-userlanguageblock {\n  float: right;\n  margin: 23px 10px;\n\n  p {\n    margin: 0 5px;\n  }\n\n  span {\n    margin: 0 5px;\n    color: color(grey-dark);\n\n    img {\n      width: 1vw;\n      margin: 0 3px;\n    }\n\n    &.user-dropdown img:first-child {\n      width: 2vw;\n    }\n  }\n}\n","/* \n * THIS FILE CONTAINS ALL THE FOOTER STYLES\n * @author Shruti \n */\n\n\nfooter.footer {\n  @include box-shadow(0, 16px, 40px, rgba(0, 0, 0, .28), $inset: true);\n  background: color(footer-bg);\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  padding: 63px 16%;\n  display: inline-block;\n  z-index: -1;\n\n  @media (max-width: 767px) {\n    position: relative;\n    padding: 63px 8%;\n  }\n\n  #block-logoimage-2,\n  nav {\n    display: inline-block;\n    vertical-align: top;\n    width: 23%;\n    @media (max-width: 450px) {\n      width: 100%;\n      text-align: center;\n\n      li {\n        text-align: center;\n      }\n    }\n  }\n\n  nav {\n    h2,\n    ul {\n      margin: 0;\n    }\n\n    h2,\n    ul li a {\n      font-size: font-size(m) + 2;\n      color: color(black);\n      line-height: $base-line-height + 4;\n    }\n\n    ul li a {\n      font-weight: weight(light);\n    }\n  }\n\n  #block-nvli-2 {\n    margin: 0 15%;\n    @media (max-width: 450px) {\n      margin: 20px 0;\n    }\n  }\n\n  #block-followus-2 {\n    float: right;\n  }\n}\n\n","/* \n * THIS FILE CONTAINS ALL THE STYLES FOR HOMEPAGE\n * @author Shruti \n */\n\n.is-path-frontpage {\n  .homepage-banner-wrapper {\n    background: color(white);\n    float: left;\n    width: 100%;\n  }\n\n  .layout-3col__full {\n    padding: 0 18px;\n    @media only screen and (max-width: 767px) {\n      padding: 0;\n    }\n\n    .homepage-resources-wrapper .block {\n      @include border-radius(8px);\n      float: left;\n      width: 32.69%;\n      padding: 33px 40px 30px;\n      margin: 6px 12px 6px 0;\n      background: color(resource-bg);\n\n      &:nth-child(3n+3) {\n        @media only screen and (min-width: 768px) {\n          margin: 6px 0;\n        }\n      }\n\n      @media only screen and (min-width: 980px) and (max-width: 1024px) {\n        width: 32.5%;\n      }\n      @media only screen and (min-width: 768px) and (max-width: 979px) {\n        width: 32%;\n      }\n      @media only screen and (min-width: 451px) and (max-width: 767px) {\n        width: 49%;\n        margin: 6px 2% 6px 0;\n\n        &:nth-child(2n + 1) {\n          margin: 6px 0;\n        }\n      }\n      @media only screen and (max-width: 450px) {\n        width: 100%;\n        margin: 6px 0;\n      }\n\n      &:nth-child(3n+4) {\n        clear: left;\n        @media only screen and (min-width: 451px) and (max-width: 767px) {\n          clear: none;\n        }\n      }\n\n      .field--name-field-block-image {\n        float: left;\n        margin: 0 32px 0 0;\n      }\n\n      .field {\n        font-size: font-size(xl);\n        color: color('grey');\n        font-weight: weight(light);\n        line-height: $base-line-height + 6;\n      }\n\n      .field--name-field-block-link {\n        color: color(blue);\n      }\n    }\n  }\n\n  .layout-3col__full .block {\n    .field--name-field-block-image img {\n      width: 4.3vw;\n      @media only screen and (max-width: 450px) {\n        width: 10vw;\n      }\n    }\n  }\n}\n\ndiv#block-homepagebanner-2 {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n\n  video {\n    width: 100%;\n  }\n\n  .field--type-text-with-summary .banner-text {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    color: color(white);\n    width: 100%;\n    text-align: center;\n    font-size: font-size(xl);\n    margin: 20px 0 0;\n    font-weight: weight(light);\n\n    p {\n      margin: 15px 0;\n\n      &:nth-child(2) {\n        font-size: font-size(xxl) + 8;\n      }\n    }\n  }\n}\n\n#block-customsearchblock-2 {\n  position: absolute;\n  top: 90px;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  z-index: 1;\n\n  #new-custom-search-form {\n    @include search-block;\n    display: inline-block;\n    margin: 0 36.1%;\n  }\n\n  &.sticky-search-header {\n    position: relative;\n    top: 0;\n\n    #new-custom-search-form {\n      float: right;\n      margin: 20px 20px 0 0;\n    }\n  }\n}\n\n#block-indiasancientpast-2 {\n  max-width: 68%;\n  margin: 30px 16%;\n  display: inline-block;\n  @media (max-width: 979px) {\n    max-width: 100%;\n    margin: 30px 0;\n  }\n\n  .field:not(.field--name-field-featured-cont) {\n    float: left;\n    width: 56%;\n    @media only screen and (max-width: 450px) {\n      width: 100%;\n    }\n    @media only screen and (min-width: 451px) and (max-width: 767px) {\n      width: 47%;\n    }\n  }\n\n  .field--name-field-featured-cont {\n    float: left;\n    @media only screen and (min-width: 450px) {\n      margin: 0 35px 0 0;\n    }\n\n    img {\n      @include box-shadow(0, 16px, 40px, rgba(0, 0, 0, .28));\n    }\n  }\n\n  .field--name-field-content-title,\n  .field--name-field-content-author {\n    color: color(title-color);\n    text-transform: capitalize;\n  }\n\n  .field--name-field-content-title {\n    font-size: font-size(xxl);\n    font-weight: weight(light);\n    margin: 0 0 10px;\n    @media only screen and (max-width: 450px) {\n      margin: 10px 0;\n    }\n  }\n\n  .field--name-field-content-author {\n    font-size: font-size(xl);\n    font-weight: weight(medium);\n  }\n\n  .field--name-body {\n    @include ellipsis ($max-height: 157px, $lines: 5);\n    margin: 34px 0;\n\n    p {\n      font-size: font-size(l) + 2;\n      margin: 0;\n      font-weight: weight(light);\n      line-height: $base-font-size + 10;\n      color: color(p-color);\n    }\n  }\n\n  .field--name-field-block-link {\n    a {\n      @include border-radius(8px);\n      font-size: font-size(xl);\n      border: 2px solid color(blue);\n      padding: 18px;\n      margin: 29px 0 0;\n      display: inline-block;\n      width: 280px;\n      max-width: 100%;\n      text-align: center;\n    }\n  }\n}\n\n"],"sourceRoot":"/source/"}